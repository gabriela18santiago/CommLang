
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACCEPT BIND CLIENT_CLOSE CONNECT CREATE_CLIENT CREATE_SERVER LISTEN RECEIVE SEND SERVER_CLOSE\n    statement : create_Client\n            | create_Server\n            | connect\n            | receive\n            | send\n            | close_client\n            | bind\n            | listen\n            | accept\n            | close_server\n            | error\n    create_Client : CREATE_CLIENTcreate_Server : CREATE_SERVERconnect : CONNECTreceive : RECEIVEsend : SENDclose_client : CLIENT_CLOSEbind : BINDlisten : LISTENaccept : ACCEPTclose_server : SERVER_CLOSE'
    
_lr_action_items = {'error':([0,],[12,]),'CREATE_CLIENT':([0,],[13,]),'CREATE_SERVER':([0,],[14,]),'CONNECT':([0,],[15,]),'RECEIVE':([0,],[16,]),'SEND':([0,],[17,]),'CLIENT_CLOSE':([0,],[18,]),'BIND':([0,],[19,]),'LISTEN':([0,],[20,]),'ACCEPT':([0,],[21,]),'SERVER_CLOSE':([0,],[22,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'create_Client':([0,],[2,]),'create_Server':([0,],[3,]),'connect':([0,],[4,]),'receive':([0,],[5,]),'send':([0,],[6,]),'close_client':([0,],[7,]),'bind':([0,],[8,]),'listen':([0,],[9,]),'accept':([0,],[10,]),'close_server':([0,],[11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> create_Client','statement',1,'p_statement','CommLangParser.py',19),
  ('statement -> create_Server','statement',1,'p_statement','CommLangParser.py',20),
  ('statement -> connect','statement',1,'p_statement','CommLangParser.py',21),
  ('statement -> receive','statement',1,'p_statement','CommLangParser.py',22),
  ('statement -> send','statement',1,'p_statement','CommLangParser.py',23),
  ('statement -> close_client','statement',1,'p_statement','CommLangParser.py',24),
  ('statement -> bind','statement',1,'p_statement','CommLangParser.py',25),
  ('statement -> listen','statement',1,'p_statement','CommLangParser.py',26),
  ('statement -> accept','statement',1,'p_statement','CommLangParser.py',27),
  ('statement -> close_server','statement',1,'p_statement','CommLangParser.py',28),
  ('statement -> error','statement',1,'p_statement','CommLangParser.py',29),
  ('create_Client -> CREATE_CLIENT','create_Client',1,'p_create_Client','CommLangParser.py',41),
  ('create_Server -> CREATE_SERVER','create_Server',1,'p_create_Server','CommLangParser.py',46),
  ('connect -> CONNECT','connect',1,'p_connect','CommLangParser.py',51),
  ('receive -> RECEIVE','receive',1,'p_receive','CommLangParser.py',56),
  ('send -> SEND','send',1,'p_send','CommLangParser.py',61),
  ('close_client -> CLIENT_CLOSE','close_client',1,'p_close_client','CommLangParser.py',66),
  ('bind -> BIND','bind',1,'p_bind','CommLangParser.py',71),
  ('listen -> LISTEN','listen',1,'p_listen','CommLangParser.py',76),
  ('accept -> ACCEPT','accept',1,'p_accept','CommLangParser.py',81),
  ('close_server -> SERVER_CLOSE','close_server',1,'p_close_server','CommLangParser.py',86),
]
